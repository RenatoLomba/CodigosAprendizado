Linguagem Python

# -*- coding: utf-8 -*-		--> Configura os charsets para utf-8 para acentuação
print("Geek University") 	--> Printa na tela o que foi escrito (string)
print("Olá, \nseja bem vindo!")	--> \n indica uma quebra de linha
nome = 'Renato' 		--> Cria uma variável com nome "nome" e valor "Renato"
print(nome) 			--> Printa o valor da variavel "nome"
print(f"O nome é {nome}!")	--> Concatena uma frase com a variavel "nome"
nome = "Renato" + " " + "Lomba"	--> Concatenação de strings
tamanho = len(nome)		--> Metodo len retorna a quantidade de caracteres em uma string
min = nome.lower()		--> Metodo da string que deixa todos os caracteres minusculos
max = nome.upper()		--> Metodo da string que deixa todos os caracteres maiusculos
strip = nome.strip()		--> Metodo que remove espaços e caracteres especiais no inicio e final da string
lista = conjunto.split()	--> Converte um conjunto de palavras ("Maçã Banana Limão Morango") em uma lista de objetos
lista = conjunto.split("-")	--> Converte o conjunto em uma lista separando por - ("Maçã-Banana-Limão-Morango")
busca = conjunto.find("Limão")	--> Retorna a posição de um caracter ou frase especifico ou -1 se não encontrar
substituicao = conjunto.replace("Limão", "Pera")	--> Replace substitui a substring passada por outra em seguida
letra = nome[0]			--> Retorna o caracter na posicao 0
numero = 42 			--> Cria uma variável de nome "numero" e valor inteiro 42
numero = numero + 58 		--> Somo o valor da variavel numero com 58 e guardo nela mesma
nome = input("Qual o seu nome? ") 			--> Pede para o usuário digitar um valor e o guarda na variavel nome
idade = int(input("Informe sua idade: "))		--> Faz um casting de tipo para int
type(variavel)						--> Retorna o tipo da variavel (int, str, float, bool)
verificar = True/False		--> Variavel tipo booleana
#comentario			--> Coloca comentários na aplicação
""comentario""			--> Comentários de multiplas linhas
and	--> Operador lógico &&
or	--> Operador lógico ||
not	--> Operador lógico !
if x < y:			--> Estrutura condicional IF
    print("Verdadeiro")
elif x == y:			--> Condicional ELSE IF
    print("Iguais")
else:				--> Condicional ELSE
    print("Falso")

while i < 5:			--> Laço de repetição while (enquanto)
    print(i)
    i+=1
for n in range(10): 		--> Abre um loop onde n vai de 0 até 10
    print(n)
for n in lista:			--> Loop que varre todos os indices de um array/lista
    print(n)
def FUNÇÂO(PARAMETROS):		--> Definição de uma função
    print("Função")
FUNÇÂO(PARAMETROS)		--> Chamada da função

arquivo = open(CAMINHODOARQUIVO, MODO)	--> Abrindo um arquivo, podendo ser armazenado em uma variavel
	Modos:	r		--> Somente Leitura
		w		--> Escrita (apaga e substitui os dados no arquivo)
		r+		--> Leitura e escrita
		w+		--> Escrita (substitui os dados no arquivo)
		a		--> Escrita no final do arquivo
		a+		--> Leitura e escrita (atualiza o arquivo)
arquivo.readlines()		--> Lê e armazena cada linha em uma lista
arquivo.read()			--> Lê o arquivo inteiro
arquivo.write("TEXTO")		--> Escreve em um arquivo
arquivo.close()			--> Fecha o arquivo após escrita ou leitura

lista = ["Matthew", "Marisha"]	--> Cria uma lista
lista = []			--> Crio uma lista em branco
lista[0]			--> Indice da lista 0 é a primeira posição (Matthew)
lista[1:]			--> Indice 1 em diante
lista[2:4]			--> Indice 2 até o 4
len(lista)			--> Retorna o tamanho da lista
lista.append("Travis")		--> Adiciona um item ao final da lista
if "Matthew" in lista:		--> Verifica se um item existe na lista
    print("Existe")
lista.sort()			--> Ordena uma lista
lista_ordenada = sorted(lista)	--> Sorted retorna uma lista ordenada
lista.sort(reverse=True)	--> Ordena a lista ao reverso
dicionario = {"Renato" : "renatolomba.com"}	--> Cria um dicionario onde (chave : valor)
print(dicionario["Renato"])	--> O valor printado será "renatolomba.com"
for chave in dicionario:	--> Varrre um dicionario por suas chaves
    print(dicionario[chave])
del lista[1]			--> Remove o item na posição indicada
import random			--> Biblioteca para numeros aleatórios
random.randint(1, 100)		--> Retorna um numero inteiro de 1 até 100
random.choice(listadenumeros)	--> Escolhe e retorna um numero que esta dentro de uma lista de numeros
try:				--> Tratamento de exceções com try e exception
    print(2/0)
except:
    print("Divisão por 0")
finally:			--> Será executado sempre após o try/catch, independente se caiu na exceção ou não
    print("Fim da execução")
lista2 = [i for i in lista1]	--> List Comprehension, onde a lista2 receberá um valor i em cada iteração da lista1
lista2 = [i for i in lista1 if i%2 == 0]	--> List Comprehension, onde a lista2 receberá o valor i em cada iteração da lista1 apenas se caso i for par (módulo de i igual a 0)
for chave, valor in enumerate(lista)		--> Enumerate usado para retornar o conjuto par chave/valor de uma lista
map(função, lista)				--> Função Map pega cada objeto de uma lista e aplica a função em cima dele
zip(lista1, lista2)				--> concatena um cada valor da lista 1 com cada valor da lista 2
PHP

<?php código ?>			--> Tag pagrão para embutir códigos PHP
<?= código ?>			--> Tag de impressão utilizado apenas para impressão no documento
echo('<h1>Teste</h1>')		--> Imprime no DOM da página HTML
print('<h1>Teste</h1>')		--> Imprime no DOM da página e retorna um valor
//comentario de 1 linha
#comentario de 1 linha
/*comentario de multiplas linhas*/

$nome				--> Declaração de uma variavel ($)
print($nome)			--> Imprime a variavel
$nome = 'Renato'		--> Variavel tipo string
$idade = 19			--> Variavel tipo int
$peso = 68.5			--> Variavel tipo float
$fumante = true			--> Variavel tipo true
print('Olá ' . $nome . '!')		--> Concatenação utilizando o operador . (ponto)
print("Olá $nome, você tem $idade anos")--> Concatenação utilizando aspas duplas
define('NOME', 'Renato')		--> Crio uma constante, que nunca poderá ser mudada (nomedaconstante, valordaconstante)
if(condicao) {logica} else {logica}	--> Operador de comparação if/else
if(condicao) else if(condicao 2) else	--> Operador if/else if/else
(condição) ? verdadeiro : falso		--> Operador ternário
switch ($opcao) {			--> Operador condicional switch
    case 1:
	//codigo
	break;
    case 2:
	//codigo
	break
    default:
	//codigo
	break
}
while($i <= 10) { $i++ }	--> Loop While
do { $i++ } while($i <= 10)	--> Loop Do While
gettype($variavel)		--> Retorna o tipo da variável passada como parâmetro
(double) $int			--> Realiza o casting de tipos
function HelloWorld($parametros)--> Define uma função em PHP similar ao JavaScript
var_dump/print_r($lista)	--> Metodo para debug
is_null($var)			--> Verifica se o valor passado é null
empty($var)			--> Verifica se o valor passsado está vazio
$arquivo = fopen('arquivo.txt', 'a')	--> Abre ou cria um arquivo, passando o nome e o metodo
feof($arquivo)			--> Percorre o arquivo até o fim de suas linhas, retornando true quando encontrar o final
fgets($arquivo)			--> Retorna a linha atual do arquivo
fwrite($arquivo, $string)	--> Escreve no arquivo
fclose($arquivo)		--> Fecha o arquivo

include("menu.php")		--> Inclui um script de uma página php em outra, nesse caso inclui um menu.php em todas as páginas que tiverem esta função
require("menu.php")		--> Mesma função do include, porem caso a função não encontre o script passado, gera uma exceção, interrompendo o resto do script

Strings
strtolower($texto)		--> Caracteres em minusculos
strtoupper($texto)		--> Caracteres em maiusculos
ucfirst($texto)			--> Primeiro caracter maiusculo
strlen($texto)			--> Retorna a quantidade de caracteres
str_replace("origem", "destino", $texto)	--> Substitui uma cadeia de caracteres por outra
substr($texto, inicio(int), qtdcaracteres(int))	--> Retorna uma cadeia de caracteres a partir do indice passado e a quatidade de caracteres passado

Math
ceil($numero)			--> Arredonda para cima
floor($numero)			--> Arredonda para baixo
round($numero)			--> Arredonda com base nas casas decimais
rand(min, max)			--> Retorna um numero aleatorio
sqrt($numero)			--> Retorna a raíz quadrado do valor numérico
abs($negativo)			--> Transforma um numero negativo em positivo

Date
date('')			--> Retorna a Data atual, dia, mês, ano, horário etc como parâmetro
$data = date('d/m/Y H:i:s');	--> Retorna dia/mês/ano hora:minuto:segundo
date_default_timezone_get();	--> Retorna a timezone do seu PHP
date_default_timezone_set('America/Sao_Paulo');	--> Modifica a timezone do PHP
strtotime('YYYY-MM-DD')		--> Retorna a data passada em formato numérico, podendo ser calculada

Arrays
$lista = array('Item1', 'Item2')		--> Cria um array com parenteses
$lista = ['Item1', 'Item2']			--> Cria um array com colchetes
$lista[] = 'NovoValor'				--> Adiciona um novo valor no final do array
$lista = array('id' => 01, 'nome' => 'Renato')	--> Cria um array com os indices associativos
$lista['saldo'] = 450.99			--> Adiciona um novo item com o indice passado
in_array('valor', $lista)			--> Procura na lista se o valor existe, retornando true ou false
array_search('valor', $lista)			--> Retorna o índice do valor pesquisado caso ele exista
is_array($lista)				--> Verifica se a variavel é de fato um array
array_keys($lista)				--> Retorna os indices do array em um array
sort($lista)					--> Ordena o array em ordem alfabetica não preservando os índices originais
asort($lista)					--> Ordena o array em ordem alfabética preservando os índices originais
count($lista)					--> Retorna a quantidade de elementos do array
array_merge($lista, $lista2)			--> Funde um ou mais arrays em um só
explode('/', $string)				--> Recupera elementos de uma string baseado no delimitador passado e retorna um array com cada elemento
implode('/', $array)				--> Junta os elementos do array em uma string delimitando-os por / como passado por parametro
array_push($lista, $elemento)			--> Adiciona um novo item no final do array
isset($lista['indice'])				--> Verifica se o indice passado existe no array atual
unset($lista['indice'])				--> Remove um indice especifico de um array
$lista = array_filter($lista)			--> Remove um índice sem valor (nulo)

Requisições
$_GET				--> Variavel global que receberá os parametros da requisição GET em array
$_POST				--> Variavel global que receberá os parametros da requisição POST em array
header('Location: index.php')	--> Força o redirecionamento da página
session_start();		--> Inicio de uma SESSION, deve ficar antes de qualquer output de dados no navegador
$_SESSION			--> Variavel global de seção, podendo ser utilizada por toda a aplicação no back end
session_destroy();		--> Destrói a SESSION atual na instancia do browser, eliminando as variaveis de sessao criadas anteriormente